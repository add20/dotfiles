let mapleader = ","

set expandtab
set tabstop=2
set softtabstop=2
set shiftwidth=2

" au BufNewFile,BufRead *.js set nowrap tabstop=4 shiftwidth=4
" au BufNewFile,BufRead *.php set nowrap tabstop=4 shiftwidth=4
" au BufNewFile,BufRead *.hs set nowrap tabstop=2 shiftwidth=2

set textwidth=0                  " 一行に長い文章を書いていても自動折り返しをしない
set autoread " 他で書き換えられたら自動で読み直す
set formatoptions=lmoq " テキスト整形オプション，マルチバイト系を追加
set nowrap
set foldminlines=10               " 畳み込みをしない最大行数
set autoindent
set laststatus=2
set nobackup

if has('persistent_undo')
  set undodir=~/.vim/undo
  set undofile
endif

" 挿入モードでCtrl+kを押すとクリップボードの内容を貼り付けられるようにする "
imap <C-K>  <ESC>"*pa

set clipboard+=unnamed
set clipboard+=autoselect
set number

set ignorecase
set smartcase

syntax on

autocmd FileType scheme :let is_gauche=1

" 保存時に行末の空白を除去する
autocmd BufWritePre * :%s/\s\+$//ge

" 保存時にtabをスペースに変換する
if expand("%") != "Makefile"
  autocmd BufWritePre * :%s/\t/ /ge
endif

"Escの2回押しでハイライト消去
nnoremap <ESC><ESC> :nohlsearch<CR><ESC>

" insert mode での移動
imap  <C-e> <END>
imap  <C-a> <HOME>
" インサートモードでもhjklで移動（Ctrl押すけどね）
imap <C-n> <Down>
imap <C-p> <Up>
imap <C-b> <Left>
imap <C-f> <Right>

" カーソル位置の単語をyankする
nnoremap vy vawy

"ビジュアルモード時vで行末まで選択
vnoremap v $h

" コンマの後に自動的にスペースを挿入
inoremap , ,<Space>

" Use Node.js for JavaScript interpretation
let $JS_CMD='node'
" To disable error highlighting altogether
" if you want to highlight line comment out bolow
let g:JSLintHighlightErrorLine = 0
filetype plugin on

" au BufNewFile,BufRead *.ejs set filetype=html
au! BufNewFile,BufRead *.json set filetype=json " for SnipMate
